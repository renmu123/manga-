// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 作者
model Author {
  id Int @id @default(autoincrement())
  name String
  comics Comic[]
}

model Library {
  id Int @id @default(autoincrement())
  name String
  dir String
  comics Comic[]
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  config LibraryConfig?
}

model LibraryConfig{
  id Int @id @default(autoincrement())
  library   Library @relation(fields: [libraryId], references: [id], onDelete: Cascade)
  libraryId Int @unique

  coverCopy Boolean @default(true)  // 是否复制cover到metadata文件夹
  scanRootArchiveFile Boolean @default(false)  // 扫描根目录下的归档文件，并建立文件夹
}

// 漫画
model Comic {
  id Int @id @default(autoincrement())
  name String
  authors Author[]
  dir String?
  publish String?  // 出版社
  publishTime DateTime?   // 出版时间
  cover String?
  status Int @default(2) // 1：连载中，2：已完结
  chapters Chapter[]  // 章节
  tags Tag[]
  library Library @relation(fields: [libraryId], references: [id], onDelete: Cascade)
  libraryId  Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  summary String? // 简介
  inReadList Boolean @default(false)  // 是否在待阅读列表中
  readingStatus Int @default(1)  // 1：未读，2：阅读中，3：已读
}


// 章节
model Chapter{
  id Int @id @default(autoincrement())
  name String // 名称
  dir String // 目录
  type String @default("folder")
  comic Comic @relation(fields: [comicId], references: [id], onDelete: Cascade)
  comicId  Int
  cover String?
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  summary String? // 简介
  sort Int @default(0) // 排序
  category String?  // 分类
}

// 标签
model Tag {
  id Int @id @default(autoincrement())
  name String // 名称
  comics Comic[]
}

// 阅读记录
model History {
  comicId Int @unique
  chapterId Int @unique
  page Int
  updatedAt DateTime @updatedAt
}